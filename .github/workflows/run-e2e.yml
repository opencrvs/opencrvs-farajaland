name: E2E
run-name: Deploy to ${{ github.event.inputs.environment }} and E2E
on:
  repository_dispatch:
    types: [run_e2e]
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy to
        required: true
        default: 'development'
        options:
          - development
      core-image-tag:
        description: Core DockerHub image tag
        required: true
        default: 'v1.4.1'
      countryconfig-image-tag:
        description: Your Country Config DockerHub image tag
        required: true
        default: 'v1.4.1'

concurrency:
  group: ci-build
  cancel-in-progress: false

jobs:
  get-core-commit:
    runs-on: ubuntu-latest
    outputs:
      latest_commit_sha: ${{ steps.get_latest_commit.outputs.commit_sha }}
    steps:
      - name: Checkout opencrvs-core repository
        if: github.event_name == 'push' || github.event_name == 'repository_dispatch'
        uses: actions/checkout@v3
        with:
          repository: 'opencrvs/opencrvs-core'
          ref: 'develop'
      - name: Get latest commit SHA
        if: github.event_name == 'push' || github.event_name == 'repository_dispatch'
        id: get_latest_commit
        run: echo "::set-output name=commit_sha::$(git rev-parse HEAD | cut -c 1-7)"

  get-country-config-commit:
    runs-on: ubuntu-latest
    needs: get-core-commit
    outputs:
      short_sha: ${{ steps.set_short_sha.outputs.short_sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        if: github.event_name == 'push' || github.event_name == 'repository_dispatch'
      - name: Get short commit hash
        id: set_short_sha
        run: echo "::set-output name=short_sha::${GITHUB_SHA:0:7}"
        if: github.event_name == 'push' || github.event_name == 'repository_dispatch'

  deploy:
    needs: [get-country-config-commit, get-core-commit]
    uses: ./.github/workflows/deploy.yml
    with:
      environment: ${{ github.event.inputs.environment || 'development' }}
      core-image-tag: ${{ github.event.inputs.core-image-tag || needs.get-core-commit.outputs.latest_commit_sha }}
      countryconfig-image-tag: ${{ github.event.inputs.countryconfig-image-tag || needs.get-country-config-commit.outputs.short_sha }}
      reset: 'true'
    secrets: inherit

  test:
    needs: deploy
    runs-on: ubuntu-20.04
    environment: ${{ github.event.inputs.environment || 'development' }}
    steps:
      - name: Checking out git repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Use Node.js 18.19
        uses: actions/setup-node@v2
        with:
          node-version: '18.19'
          cache: 'npm'

      - name: Runs dependency installation
        run: yarn

      - name: Run tests
        uses: cypress-io/github-action@v6.6.1
        env:
          CYPRESS_RECORD_KEY: '${{ secrets.CYPRESS_RECORD_KEY }}'
          CYPRESS_COUNTRYCONFIG_URL: 'https://countryconfig.${{ vars.DOMAIN }}/'
          CYPRESS_GATEWAY_URL: 'https://gateway.${{ vars.DOMAIN }}/'
          CYPRESS_LOGIN_URL: 'https://login.${{ vars.DOMAIN }}/'
          CYPRESS_CLIENT_URL: 'https://register.${{ vars.DOMAIN }}/'
          CYPRESS_AUTH_URL: 'https://auth.${{ vars.DOMAIN }}/'
        with:
          record: true
