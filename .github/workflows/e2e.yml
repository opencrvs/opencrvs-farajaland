name: E2E
run-name: Deploy to ${{ github.event.inputs.environment }} and E2E
on:
  push:
    branches:
      - e2e/*
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy to
        required: true
        default: 'development'
        options:
          - development

jobs:
  discover-tests:
    name: Discover test directories
    runs-on: ubuntu-22.04
    outputs:
      test_matrix: ${{ steps.list-tests.outputs.test_matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: List Test Directories
        id: list-tests
        run: |
          tests_suites=$(find e2e/testcases -type f -name "*.spec.ts" | jq -R -s -c 'split("\n")[:-1]')
          echo "Test suites: $tests_suites"
          echo "test_matrix=$tests_suites" >> $GITHUB_OUTPUT
          echo "test_matrix=$tests_suites"

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/yarn/v6
          key: node-${{ hashFiles('**/yarn.lock', format('{0}/{1}',matrix.package,'package.json')) }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: yarn

  test:
    needs: [discover-tests]
    runs-on: ubuntu-22.04
    environment: ${{ github.event.inputs.environment || 'development' }}
    strategy:
      fail-fast: false
      matrix:
        test_file: ${{ fromJson(needs.discover-tests.outputs.test_matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/yarn/v6
          key: node-${{ hashFiles('**/yarn.lock', format('{0}/{1}',matrix.package,'package.json')) }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: yarn

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Tests
        run: npx playwright test ./${{ matrix.test_file }}
        env:
          DOMAIN: '${{ vars.DOMAIN }}'
        continue-on-error: true

      - name: Form the artifact name from test_file
        id: artifact
        run: echo "artifact=$(dirname ${{ matrix.test_file }})_$(basename ${{ matrix.test_file }})" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{github.event.inputs.core-image-tag || needs.get-core-commit.outputs.latest_commit_sha}}-${{github.event.inputs.countryconfig-image-tag || needs.get-country-config-commit.outputs.short_sha}}-${{ steps.artifact.outputs.artifact }}
          path: playwright-report/
          retention-days: 30