# How to use this workflow:
##################################################################
# Workflow should be triggered manually from release branch
# environment: Name of the environment to create
# core_image_tag: OpenCRVS core image tag
# Country config will be provisioned from latest commit to release branch
name: Release - Provision Environment
run-name: Provision ${{ inputs.environment }} release environment
on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment, e/g v19 will create v19.opencrvs.dev"
                required: true
            core_image_tag:
                description: "Core image tag"
                required: true
                type: string

jobs:
    release-provision-environment:
        runs-on: ubuntu-latest
        environment: ${{ inputs.environment }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Fail if not on release branch
              # TODO: Before MERGE DON'T FORGET
              # Delete condition: [[ "${{ github.ref }}" != refs/heads/ocrvs-9393-uber-pipeline ]]
              run: |
                echo "Current ref name: ${{ github.ref_name }} and ref: ${{ github.ref }}"
                if [[ "${{ github.ref }}" != refs/heads/release/* ]] && [[ "${{ github.ref }}" != refs/heads/ocrvs-9393-uber-pipeline ]]
                then
                    echo "❌ This workflow must be run from a release/* branch."
                    echo "Please check release documentation for more information: TODO: Add link to documentation"
                    exit 1
                fi
            - name: Create server ${{ vars.COUNTRY_NAME }}-${{ inputs.environment }} on Hetzner
              uses: ./.github/actions/run-workflow
              with:
                # workflow: dummy-create-server.yml
                workflow: create-hetzner-server.yml
                args: -f environment=${{ inputs.environment }}
                token: ${{ secrets.GH_TOKEN }}

            - name: Get latest commit SHA
              id: get_latest_commit
              run: |
                git pull
                echo "config_tag=$(git rev-parse HEAD | cut -c 1-7)" >> $GITHUB_OUTPUT
            - name: Run provision server 
              uses: ./.github/actions/run-workflow
              with:
                workflow: provision.yml
                # workflow: dummy-provision.yml
                args: -f environment=${{ inputs.environment }}
                token: ${{ secrets.GH_TOKEN }}
            - name: Run deployment on ${{ inputs.environment }}
              uses: ./.github/actions/run-workflow
              with:
                # workflow: dummy-deploy.yml
                workflow: deploy.yml
                args: |
                  -f environment=${{ inputs.environment }} \
                  -f core-image-tag=${{ inputs.core_image_tag }} \
                  -f countryconfig-image-tag=${{ steps.get_latest_commit.outputs.config_tag }}
                token: ${{ secrets.GH_TOKEN }}
            - name: Seeding data to ${{ inputs.environment }}
              uses: ./.github/actions/run-workflow
              with:
                # workflow: dummy-seed.yml
                workflow: seed-data.yml
                args: |
                  -f environment=${{ inputs.environment }} \
                  -f core-image-tag=${{ inputs.core_image_tag }}
                token: ${{ secrets.GH_TOKEN }}
