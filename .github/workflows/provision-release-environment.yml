# How to use this workflow:
##################################################################
# Workflow should be triggered manually from release branch
# environment: Name of the environment to create
# core_image_tag: OpenCRVS core image tag
# Country config will be provisioned from latest commit to release branch
name: Release - Provision Environment
run-name: "Provision ${{ inputs.environment }} release environment (core: ${{ inputs.core_image_tag }})"
on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment, e/g v19 will create v19.opencrvs.dev"
                required: true
            core_image_tag:
                description: "Core image tag"
                required: true
                type: string

jobs:
    verify-branch:
      environment: ${{ inputs.environment }}
      runs-on: ubuntu-24.04
      steps:
      - name: Fail if not on release branch
        run: |
          echo "Current ref name: ${{ github.ref_name }} and ref: ${{ github.ref }}"
          if [[ "${{ github.ref }}" != refs/heads/release/* ]]
          then
              echo "❌ This workflow must be run from a release/* branch."
              echo "Please check release documentation for more information: TODO: Add link to documentation"
              exit 1
          fi
    create-server:
      needs: verify-branch
      uses: ./.github/workflows/create-hetzner-server.yml
      with:
        environment: ${{ inputs.environment }}
      secrets: inherit
    provision-server:
      needs: [verify-branch, create-server]
      uses: ./.github/workflows/provision.yml
      with:
        environment: ${{ inputs.environment }}
      secrets: inherit
    check-countryconfig:
      runs-on: ubuntu-24.04
      needs: [verify-branch, create-server]
      environment: ${{ inputs.environment }}
      outputs:
        image_tag: ${{ steps.get_latest_commit.outputs.config_tag }}
      steps:
          - name: Checkout repo ${{ github.repository }}
            uses: actions/checkout@v4
          - name: Get latest commit SHA
            id: get_latest_commit
            run: |
              git pull
              git status
              config_tag=$(git rev-parse HEAD | cut -c 1-7)
              echo "Latest commit SHA: $config_tag"
              echo "config_tag=$config_tag" >> $GITHUB_OUTPUT
    deploy:
      needs: [verify-branch, provision-server, check-countryconfig, create-server]
      uses: ./.github/workflows/deploy.yml
      with:
        environment: ${{ inputs.environment }}
        core-image-tag: ${{ inputs.core_image_tag }}
        countryconfig-image-tag: ${{ needs.check-countryconfig.outputs.image_tag }}
        reset: 'true'
      secrets: inherit
