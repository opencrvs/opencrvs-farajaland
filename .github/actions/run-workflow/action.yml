name: Run Workflow Trigger
description: Triggers a workflow using gh CLI
inputs:
  workflow:
    required: true
  args:
    required: true
  token:
    required: true
runs:
  using: "composite"
  steps:
    - name: Trigger workflow
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
        WORKFLOW: ${{ inputs.workflow }}
        WORKFLOW_ARGS: ${{ inputs.args }}
      run: |
            set -euo pipefail

            REPO="opencrvs/opencrvs-farajaland"       # Replace with your repo
            # WORKFLOW="dummy-seed.yml" # Workflow filename or ID
            REF="ocrvs-9393-uber-pipeline"      # Branch or tag
            # REF="ocrvs-9393-final-test"
            RELEASE_VERSION="v1.7.0"            # Example input
            POLL_INTERVAL=10                    # seconds
            MAX_ATTEMPTS=60                     # 10 minutes max

            echo "üöÄ Triggering workflow $WORKFLOW on ref $REF with $WORKFLOW_ARGS..."

            # Trigger the workflow
            gh workflow run "$WORKFLOW" \
            --repo "$REPO" \
            --ref "$REF" \
            $WORKFLOW_ARGS

            # Wait for the workflow run to appear
            echo "‚è≥ Waiting for workflow run to be listed..."
            sleep 5

            # Find the latest workflow run ID for the specified workflow
            attempt=0
            run_id=""
            while [[ -z "$run_id" && $attempt -lt $MAX_ATTEMPTS ]]; do
            run_id=$(gh run list \
                --repo "$REPO" \
                --workflow "$WORKFLOW" \
                --branch "$REF" \
                --json databaseId,status,headBranch \
                --jq 'map(select(.headBranch == "'"$REF"'")) | .[0].databaseId')

            if [[ -n "$run_id" ]]; then
                echo "‚úÖ Found run ID: $run_id"
                break
            fi

            ((attempt++))
            sleep $POLL_INTERVAL
            done

            if [[ -z "$run_id" ]]; then
            echo "‚ùå Failed to find the workflow run after $((POLL_INTERVAL * MAX_ATTEMPTS)) seconds"
            exit 1
            fi

            # Wait for the workflow to complete
            echo "‚è≥ Waiting for run $run_id to complete..."
            echo "https://github.com/opencrvs/opencrvs-farajaland/actions/runs/$run_id"
            gh run watch --interval 30 "$run_id" --repo "$REPO"

            # Get the result
            conclusion=$(gh run view "$run_id" --repo "$REPO" --json conclusion -q '.conclusion')
            echo "üéØ Workflow finished with conclusion: $conclusion"

            if [[ "$conclusion" != "success" ]]; then
            echo "‚ùå Workflow failed or was cancelled"
            exit 1
            fi

            echo "‚úÖ Workflow succeeded!"

